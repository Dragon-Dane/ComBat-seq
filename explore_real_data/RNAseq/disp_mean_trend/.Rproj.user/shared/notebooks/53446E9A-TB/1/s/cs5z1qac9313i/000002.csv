"0","```r
####  Differential genes relative to batch 
####  (within condition 0 / condition specified by 'test_cond')
rds_subset <- rds_obj[, rds_obj$Dataset %in% c(\"Africa\", \"G6\")]
test_cond <- \"Non-progressor\"
counts_cond <- assay(rds_subset, \"counts\")[, rds_subset$Label==test_cond]
batch_cond <- as.factor(as.character(rds_subset$SequencingBatch[rds_subset$Label==test_cond]))
y <- DGEList(counts=counts_cond, group=as.factor(batch_cond))
y <- calcNormFactors(y, method=\"TMM\")
design <- model.matrix(~as.factor(batch_cond))
y <- estimateDisp(y, design)
fit <- glmQLFit(y, design)
qlf <- glmQLFTest(fit, coef=2)
de_res <- topTags(qlf, n=nrow(rds_subset))
up_genes <- rownames(de_res)[de_res$table$logFC >= 0]  # all up-regulated genes
head_up_genes <- head(up_genes, n=50)  # top-50 up-regulated genes
tail_up_genes <- tail(up_genes, n=50)  # 50 least up-regulated genes
batch_up_inds <- up_genes
down_genes <- rownames(de_res)[de_res$table$logFC < 0]  # all down-regulated genes
head_down_genes <- head(down_genes, n=50)  # top-50 down-regulated genes
tail_down_genes <- tail(down_genes, n=50)  # 50 least down-regulated genes
batch_down_inds <- down_genes
```"
